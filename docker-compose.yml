version: '3.9'

services:
    app:
        build:
            context: .
            dockerfile: Dockerfile
        image: rl-demo
        container_name: rl-demo
        restart: unless-stopped
        working_dir: /var/www
        volumes:
            - .:/var/www
            - ./docker/php/php.ini:/usr/local/etc/php/conf.d/php.ini
        networks:
            - app-network
        depends_on:
            - db
            - webserver

    #Nginx Service
    webserver:
        image: nginx:alpine
        container_name: rl-demo-webserver
        restart: unless-stopped
        ports:
            - "80:80"
            - "443:443"
        volumes:
            - .:/var/www
            - ./docker/nginx/conf.d/:/etc/nginx/conf.d/
        networks:
            - app-network

    #MySQL Service
    db:
        image: mysql:8.2.0
        container_name: rl-demo-mysql
        restart: unless-stopped
        tty: true
        ports:
            - "${DB_PORT}:${DB_PORT}"
        environment:
            MYSQL_DATABASE: ${DB_DATABASE}
            MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
            MYSQL_ALLOW_EMPTY_PASSWORD: "yes"
        volumes:
            - dbdata:/var/lib/mysql
            - ./docker/mysql/my.cnf:/etc/mysql/my.cnf
        networks:
            - app-network

networks:
    app-network:
        driver: bridge

volumes:
    dbdata:
        driver: local
